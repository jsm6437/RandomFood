package Controller;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;

import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.stage.Stage;

import java.net.URL;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ResourceBundle;

import javax.swing.JOptionPane;

import application.ModelTable;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.TableView;

import javafx.scene.control.TableColumn;

public class BotCheckController implements Initializable {
	@FXML
	private TextField ip_Text;
	@FXML
	private TableView<ModelTable> CheckTable;
	@FXML
	private TableColumn<ModelTable, String> Check;
	@FXML
	private Button btn_Check;
	
	ObservableList<ModelTable> oblist = FXCollections.observableArrayList();
	// Event Listener on Button[#btn_Check].onAction
	@FXML
	public void btnCheckClicked(ActionEvent event) {
		// TODO Autogenerated
		try {
		Stage primaryStage = (Stage) btn_Check.getScene().getWindow();
		
		if(ip_Text.getText().equals(oblist.get(0).getChecker())) {
			JOptionPane.showMessageDialog(null, "검사 성공");
			Stage addStage = new Stage();
			Parent root;
			root = FXMLLoader.load(getClass().getResource("/View/FoodView.fxml"));
			Scene scene = new Scene(root);
			addStage.setTitle("오늘의 식당");
			addStage.setScene(scene);
			addStage.show();
			primaryStage.close();
		}
		else {
			JOptionPane.showMessageDialog(null, "검사 실패 프로그램을 종료.");
			primaryStage.close();
		}
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	@Override
	public void initialize(URL location, ResourceBundle resources) {

		
		try {
			JOptionPane.showMessageDialog(null, "<매크로 검사> Check란에 보이는 문자를 입력해주세요.");
			Connection conn = application.DBConnection.getConnection();
			String sql1 = "select * from (select * from checktable order by dbms_random.value)where rownum = 1";
			ResultSet rs = conn.createStatement().executeQuery(sql1);
			
			
//			conn.createStatement().executeQuery(sql4);
			
			while (rs.next()) {
				oblist.add(new ModelTable(rs.getString("checker")));
			}		
			Check.setCellValueFactory(new PropertyValueFactory<>("checker"));
			CheckTable.setItems(oblist);
			
			conn.close();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 

		
	}
}
