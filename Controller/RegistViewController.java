package Controller;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.stage.Stage;

import java.net.URL;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ResourceBundle;

import javax.swing.JOptionPane;

import application.DBConnection;
import application.ModelTable;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.TableView;

import javafx.scene.control.TableColumn;

public class RegistViewController implements Initializable {
	@FXML
	private TableView<ModelTable> userTable;
	@FXML
	private TableColumn<ModelTable, String> tb_ID;
	@FXML
	private TableColumn<ModelTable, String> tb_PW;
	@FXML
	private TableColumn<ModelTable, String> tb_PH;
	@FXML
	private TextField ip_ID;
	@FXML
    private PasswordField ip_PW;
	@FXML
	private TextField ip_PH;
	@FXML
	private Button lgn_Btn;

	ObservableList<ModelTable> oblist = FXCollections.observableArrayList();

	public void ip_clear() {
		ip_ID.clear();
		ip_PW.clear();
		ip_PH.clear();
	}

	// Event Listener on Button.onAction
	@FXML
	public void registClicked(ActionEvent event) {
		// TODO Autogenerated
		try {
			Connection conn = DBConnection.getConnection();
			String sql = "insert into TEST1 (id,pw,phone) values('";

			sql = sql + ip_ID.getText() + "','" + ip_PW.getText() + "','" + ip_PH.getText() + "')";

			conn.createStatement().executeQuery(sql);
			ModelTable tmp = new ModelTable(ip_ID.getText(), ip_PW.getText(), ip_PH.getText());
			JOptionPane.showMessageDialog(null, "회원 등록 완료");

			oblist.add(tmp);

			userTable.setItems(oblist);
			ip_clear();
			conn.close();

		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, "아이디 및 비밀번호는 필수입력입니다.");
			ip_clear();
		}
	}

	// Event Listener on Button.onAction
	@FXML
	public void deleteClicked(ActionEvent event) {
		// TODO Autogenerated

		try {
			Connection conn = DBConnection.getConnection();
			ModelTable selected = userTable.getSelectionModel().getSelectedItem();
			String sql = "DELETE FROM TEST1 WHERE id ='";

			sql = sql + selected.getId() + "'";

			conn.createStatement().executeQuery(sql);

			oblist.remove(selected);

			JOptionPane.showMessageDialog(null, "회원 삭제 완료.");

			userTable.setItems(oblist);

			conn.close();
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	// Event Listener on Button[#lgn_Btn].onAction
	@FXML
	public void lgnClicked(ActionEvent event) {
		// TODO Autogenerated
		try {
			Stage registStage = (Stage) lgn_Btn.getScene().getWindow();
			Stage loginStage = new Stage();
			Parent root;
			root = FXMLLoader.load(getClass().getResource("/View/LoginView.fxml"));

			Scene scene = new Scene(root);

			loginStage.setTitle("로그인");
			loginStage.setScene(scene);
			loginStage.show();

			registStage.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Override
	public void initialize(URL location, ResourceBundle resources) {
		try {
			Connection conn = DBConnection.getConnection();
			ResultSet rs = conn.createStatement().executeQuery("select * from TEST1 order by id");
			while (rs.next()) {
				oblist.add(new ModelTable(rs.getString("id"), rs.getString("pw"), rs.getString("phone")));
			}
			tb_ID.setCellValueFactory(new PropertyValueFactory<>("id"));
			tb_PW.setCellValueFactory(new PropertyValueFactory<>("pw"));
			tb_PH.setCellValueFactory(new PropertyValueFactory<>("phone"));

			userTable.setItems(oblist);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
}
