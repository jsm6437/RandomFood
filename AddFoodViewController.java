package application;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.stage.Stage;

import java.io.IOException;
import java.net.URL;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ResourceBundle;

import javax.swing.JOptionPane;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.TableView;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.TableColumn;

public class AddFoodViewController implements Initializable {
	@FXML
	private TableView<ModelTable> FoodTable2;
	@FXML
	private TableColumn<ModelTable, String> Food2;
	@FXML
	private TableColumn<ModelTable, Integer> Count2;
	@FXML
	private TextField tf_Food;
	@FXML
	private Button BackBtn;

	ObservableList<ModelTable> oblist = FXCollections.observableArrayList();

	// Event Listener on Button.onAction
	@FXML
	public void btn_AddClicked2(ActionEvent event) {
		// TODO Autogenerated
		try {
			Connection conn = DBConnection.getConnection();
			String sql = "INSERT INTO Food (Food,Count) VALUES(";
			sql = sql + "'" + tf_Food.getText() +"',"+ '0' +")";
			conn.createStatement().executeQuery(sql);

			JOptionPane.showMessageDialog(null, "식당 등록 완료.");

			ModelTable tmp;
			tmp = new ModelTable(tf_Food.getText(),0);
			oblist.add(tmp);
			FoodTable2.setItems(oblist);
			conn.close();
			ip_clear();
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, "식당명은 비우거나 중복될 수 없음.");
			ip_clear();
		}
	}

	public void ip_clear() {
		tf_Food.clear();
	}
	// Event Listener on Button.onAction

	@FXML
	public void btn_DelClicked(ActionEvent event) {
		// TODO Autogenerated
		try {
			Connection conn = DBConnection.getConnection();

			ModelTable selected = FoodTable2.getSelectionModel().getSelectedItem();

			String sql = "DELETE FROM Food WHERE Food ='";

			sql = sql + selected.getFood() + "'";

			conn.createStatement().executeQuery(sql);

			oblist.remove(selected);

			JOptionPane.showMessageDialog(null, "식당 삭제 완료.");

			FoodTable2.setItems(oblist);

			conn.close();

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	// Event Listener on Button.onAction
	@FXML
	public void btn_BackClicked(ActionEvent event) {
		// TODO Autogenerated
		Stage primaryStage = new Stage();
		Stage addStage = (Stage) BackBtn.getScene().getWindow();
		Parent root;
		try {
			root = FXMLLoader.load(getClass().getResource("FoodView.fxml"));
			Scene scene = new Scene(root);
			primaryStage.setTitle("오늘의 식당");
			primaryStage.setScene(scene);
			primaryStage.show();
			addStage.close();

		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	@Override
	public void initialize(URL location, ResourceBundle resources) {

		Connection conn = DBConnection.getConnection(); // 만들어둔 DBconnection 클래스에서 데이터베이스 연결을 불러옵니다.
		try {
			ResultSet rs = conn.createStatement().executeQuery("select * from FOOD"); // 쿼리문을 작성하는 곳입니다.
			while (rs.next()) {
				oblist.add(new ModelTable(rs.getString("food"),rs.getInt("count")));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}

		Food2.setCellValueFactory(new PropertyValueFactory<>("food"));
		Count2.setCellValueFactory(new PropertyValueFactory<>("count"));

		FoodTable2.setItems(oblist);

	}
}
